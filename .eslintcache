[{"C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\index.js":"1","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\firebase.js":"2","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\components\\App.js":"3","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\components\\Router.js":"4","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\components\\Navigation.js":"5","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\routes\\Home.js":"6","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\routes\\Auth.js":"7","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\routes\\Profile.js":"8","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\routes\\Mainpage.js":"9","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\routes\\Loginform.js":"10"},{"size":198,"mtime":1610717856474,"results":"11","hashOfConfig":"12"},{"size":700,"mtime":1610115436742,"results":"13","hashOfConfig":"12"},{"size":1174,"mtime":1610718200327,"results":"14","hashOfConfig":"12"},{"size":1034,"mtime":1610704235358,"results":"15","hashOfConfig":"12"},{"size":360,"mtime":1610638466750,"results":"16","hashOfConfig":"12"},{"size":1489,"mtime":1610687798524,"results":"17","hashOfConfig":"12"},{"size":2457,"mtime":1610628401381,"results":"18","hashOfConfig":"12"},{"size":418,"mtime":1610628476435,"results":"19","hashOfConfig":"12"},{"size":7264,"mtime":1610718057670,"results":"20","hashOfConfig":"12"},{"size":2685,"mtime":1610716658639,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"17v89qv",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\index.js",["50"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport firebase from \"./firebase\";\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n\n\n\n\n",["51","52"],"C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\firebase.js",[],"C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\components\\App.js",["53","54","55","56","57","58","59"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link, BrowserRouter } from 'react-router-dom';\nimport { authService } from '../firebase';\n\nimport \"../routes/style.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport Loginform from '../routes/Loginform';\nimport Mainpage from '../routes/Mainpage';\n\nconsole.log(\"run App\");\n\nfunction App() {\n  console.log(\"run App fuction\");\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  \n  return(\n    <BrowserRouter>\n    {/* url path가 아래로 바뀔때 마다 component에 맞는 화면을 보여줌 */}\n     <Route path=\"/\" component = {Mainpage} exact />\n     <Route path=\"/Loginform\" component ={Loginform} />\n\n  </BrowserRouter>\n\n  );\n  }  \n\n\nexport default App;\n","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\components\\Router.js",["60","61","62","63","64"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch,  BrowserRouter } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\nimport Mainpage from \"../routes/Mainpage\";\r\nimport Loginform from \"../routes/Loginform\";\r\n\r\nconsole.log(\"run router\");\r\n\r\n\r\nconst AppRouter = ({isLoggedIn, userObj}) => {\r\n  console.log(\"run router fuc\");\r\n\r\n    return(\r\n<BrowserRouter>\r\n{isLoggedIn && <Navigation />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            {/* <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route> */}\r\n          </>\r\n        ) : (\r\n            <>\r\n            <Route exact path=\"/\">\r\n              <Mainpage />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;",["65","66"],"C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\components\\Navigation.js",["67"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconsole.log(\"run navi\");\r\n\r\nconst Navigation = () => (\r\n  console.log(\"run navi fc\"),\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">My Profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\routes\\Home.js",[],"C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\routes\\Auth.js",[],"C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\routes\\Profile.js",["68"],"import React from \"react\";\r\nimport { authService } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconsole.log(\"run profile\");\r\n\r\nexport default () => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n      authService.signOut();\r\n      history.push(\"/\");\r\n    };\r\n    return (\r\n      <>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n      </>\r\n    );\r\n  };","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\routes\\Mainpage.js",["69","70","71","72","73","74","75","76"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link, BrowserRouter } from 'react-router-dom';\r\nimport checipe_logo from './image/chaecipielogo.png';\r\nimport image2 from './image/image2.jfif';\r\nimport \"./style.css\";\r\n\r\n// react에서 slick을 사용하기 위한 import \r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\n  \r\nconst Mainpage = () => {\r\n\r\n    // 아래쪽에 있는 슬라이드 설정\r\n    var settings_bttom = {\r\n      // 좌우 화살표 줄 것인가\r\n      arrows: false,\r\n      // 마지막 슬라이드에서 처음 슬라이스로\r\n      infinite: true,\r\n      speed: 4000,\r\n      // 한 번에 스크롤 몇 개 보여줄 건가\r\n      slidesToShow: 4,\r\n      // 스크롤 할 때마다 몇 장씩 넘길 것인가\r\n      slidesToScroll: 1,\r\n      // 자동 넘김을 할 것인가. 한다면 스피드는?\r\n      autoplay: true,\r\n      autoplaySpeed: 4000,\r\n      // 화면에 올리면 슬라이더가 자동으로 넘어가지 않음\r\n      pauseOnHover: true,\r\n      // 레이지 로딩할 거야?\r\n      lazyLoad: true\r\n      };\r\n      \r\n      // 중앙에 있는 슬라이드 설정\r\n      var settings_mid = {\r\n          // 점의 유무설정\r\n        dots: true,\r\n        // 좌우 화살표 줄 것인가\r\n        arrows: false,\r\n        // 마지막 슬라이드에서 처음 슬라이스로\r\n        infinite: true,\r\n        speed: 3000,\r\n        // 한 번에 스크롤 몇 개 보여줄 건가\r\n        slidesToShow: 1,\r\n        // 스크롤 할 때마다 몇 장씩 넘길 것인가\r\n        slidesToScroll: 1,\r\n        // 자동 넘김을 할 것인가. 한다면 스피드는?\r\n        autoplay: true,\r\n        autoplaySpeed: 3000,\r\n        // 화면에 올리면 슬라이더가 자동으로 넘어가지 않음\r\n        pauseOnHover: false,\r\n        // 레이지 로딩할 거야?\r\n        lazyLoad: true\r\n        };\r\n\r\n    return(\r\n            <div className=\"wrap\">\r\n                  <div className=\"half_bg\">   \r\n                      <div className=\"header\">\r\n                          <div className=\"logo\">\r\n                              {/* js에서는 img를 이런식으로 import해서 불러온다. */}\r\n                              <img\r\n                                src={ checipe_logo }\r\n                                width='100px'\r\n                                height='100px'\r\n                                alt= 'logo image'/>\r\n                          </div>\r\n                              <div>\r\n                                  <ul className=\"nav\">\r\n                                    {/* 수정해야하는 부분 아래처럼 Link가 li를 덮어야한다. */}\r\n                                      <li><Link to=\"#\" />About</li>\r\n                                       <li><Link to=\"#\" />Recipe</li>\r\n                                       <li><Link to=\"#\" />Notice</li>\r\n                                       <li><Link to=\"#\" />Open</li>\r\n                                  </ul>\r\n                              </div>\r\n                         \r\n                              <div className=\"login\">\r\n                                {/* 로그인 버튼을 눌렀을 때 url을 변경해준다. 이에 맞는 route가 실행되어 화면이 전환된다. */}\r\n                              <Link to=\"/Loginform\">\r\n                                     <li>로그인</li>\r\n                                </Link>\r\n                               \r\n                              </div>\r\n                           \r\n                   </div>\r\n              </div>  \r\n                  \r\n                  <div className=\"midle\">\r\n                  <div className=\"slideshow-container\">\r\n                    {/* react slick은 이런식으로 사용이 가능하다 */}\r\n                  <Slider {...settings_mid}>\r\n                            <img\r\n                                src={ image2 }\r\n                                width='700px'\r\n                                height='370px'\r\n                                />\r\n                                 <img\r\n                                src={ image2 }\r\n                                width='700px'\r\n                                height='370px'\r\n                                />\r\n                                 <img\r\n                                src={ image2 }\r\n                                width='700px'\r\n                                height='370px'\r\n                                />\r\n                  </Slider>\r\n                  </div>\r\n  \r\n                              <div className=\"about_vegan\">\r\n                                  {/* 모든 link to 부분 수정해야함 */}\r\n                                 <li><Link to=\"#\" />About</li>\r\n                                  <li><Link to=\"#\" />VEGETARIAN</li>\r\n                                  <li><Link to=\"#\" />채식에관하여</li>\r\n                              </div>\r\n\r\n                          <div className=\"btn\">\r\n                              <li><Link to=\"#\" />레시피찾기</li>\r\n                      </div>\r\n      \r\n                  </div>\r\n\r\n                  <div className=\"lat\">\r\n                       <section className=\"visual\">\r\n                       <Slider {...settings_bttom}>\r\n                          <div id=\"link-image\">\r\n                             <img\r\n                                src={ image2 }\r\n                                width='200px'\r\n                                alt='호박고구마'\r\n                                border='3'\r\n                                />\r\n                              </div>\r\n                          <div id=\"link-image\">\r\n                          <img\r\n                                src={ image2 }\r\n                                width='200px'\r\n                                alt='호박고구마'\r\n                                border='3'\r\n                                />\r\n                          </div>\r\n                           <div id=\"link-image\">\r\n                           <img\r\n                                src={ image2 }\r\n                                width='200px'\r\n                                alt='호박고구마'\r\n                                border='3'\r\n                                />\r\n                          </div>\r\n                           <div id=\"link-image\">\r\n                           <img\r\n                                src={ image2 }\r\n                                width='200px'\r\n                                alt='호박고구마'\r\n                                border='3'\r\n                                />\r\n                          </div>\r\n                           <div id=\"link-image\">\r\n                           <img\r\n                                src={ image2 }\r\n                                width='200px'\r\n                                alt='호박고구마'\r\n                                border='3'\r\n                                />\r\n                          </div>\r\n                          </Slider>\r\n                      </section>\r\n                   \r\n                  </div>\r\n           </div>\r\n\r\n    );\r\n    \r\n}         \r\n\r\n\r\n export default Mainpage;","C:\\Users\\TFX5470H\\Desktop\\checipe-back\\src\\routes\\Loginform.js",[],{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":16},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"77","severity":1,"message":"85","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":33},{"ruleId":"77","severity":1,"message":"86","line":2,"column":42,"nodeType":"79","messageId":"80","endLine":2,"endColumn":48},{"ruleId":"77","severity":1,"message":"87","line":2,"column":50,"nodeType":"79","messageId":"80","endLine":2,"endColumn":54},{"ruleId":"77","severity":1,"message":"88","line":8,"column":8,"nodeType":"79","messageId":"80","endLine":8,"endColumn":14},{"ruleId":"77","severity":1,"message":"89","line":16,"column":10,"nodeType":"79","messageId":"80","endLine":16,"endColumn":14},{"ruleId":"77","severity":1,"message":"90","line":17,"column":10,"nodeType":"79","messageId":"80","endLine":17,"endColumn":20},{"ruleId":"77","severity":1,"message":"91","line":18,"column":10,"nodeType":"79","messageId":"80","endLine":18,"endColumn":17},{"ruleId":"77","severity":1,"message":"85","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":33},{"ruleId":"77","severity":1,"message":"92","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":12},{"ruleId":"77","severity":1,"message":"93","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":12},{"ruleId":"77","severity":1,"message":"94","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":15},{"ruleId":"77","severity":1,"message":"95","line":8,"column":8,"nodeType":"79","messageId":"80","endLine":8,"endColumn":17},{"ruleId":"81","replacedBy":"96"},{"ruleId":"83","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":7,"column":29,"nodeType":"100","messageId":"101","endLine":7,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":8,"column":1,"nodeType":"104","endLine":19,"endColumn":5},{"ruleId":"77","severity":1,"message":"85","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":33},{"ruleId":"77","severity":1,"message":"105","line":2,"column":35,"nodeType":"79","messageId":"80","endLine":2,"endColumn":40},{"ruleId":"77","severity":1,"message":"86","line":2,"column":42,"nodeType":"79","messageId":"80","endLine":2,"endColumn":48},{"ruleId":"77","severity":1,"message":"106","line":2,"column":56,"nodeType":"79","messageId":"80","endLine":2,"endColumn":69},{"ruleId":"107","severity":1,"message":"108","line":63,"column":31,"nodeType":"109","endLine":67,"endColumn":52},{"ruleId":"110","severity":1,"message":"111","line":94,"column":29,"nodeType":"109","endLine":98,"endColumn":35},{"ruleId":"110","severity":1,"message":"111","line":99,"column":34,"nodeType":"109","endLine":103,"endColumn":35},{"ruleId":"110","severity":1,"message":"111","line":104,"column":34,"nodeType":"109","endLine":108,"endColumn":35},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'Router' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Slider' is defined but never used.","'init' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'userObj' is assigned a value but never used.","'Auth' is defined but never used.","'Home' is defined but never used.","'Profile' is defined but never used.","'Loginform' is defined but never used.",["112"],["113"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Route' is defined but never used.","'BrowserRouter' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]